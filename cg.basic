// http://www.weylmann.com/clebsch.pdf

void compute( double j, m, J1, J2 )
{
   double A[2000] ;
   double B[2000] ;

   int M1 = (M-J1-J2+abs(J1-J2+M))/2 ;
   int N = (M+J1+J2-abs(J1-J2-M))/2-M1+1 ;
   int FLAG = 1 ;

   for ( int x = n-1 ; x >= 1 ; x-- )
   {
      IF FLAG = 1 THEN GOTO L2

         B(2*X) = J1*(J1+1)+J2*(J2+1)+2*(M1+X)*(M-M1-X)-J*(J+1)
         C(N) = 1
         B(2*X-1) = SQR((J1*(J1+1)-(M1+X)*(M1+X-1))*(J2*(J2+1)-(M-M1-X)*(M-M1-X+1)))
L2:
         C(X) = -(B(2*X)*C(X+1)+B(2*X+1)*C(X+2))/B(2*X-1)
         SUM = SUM + C(X)^2
   }

   FLAG = FLAG + 1 ;
   IF FLAG = 1 THEN C(N) = SQR(1/(SUM+1))
GOTO L1
REM  
FOR X = 1 TO N
   PRINT USING "#.##############"; C(X)
NEXT X
}
